Imports System
Imports System.Text

Module Console
    Dim SupportLevel as UInt16

    Public Function CanVGA() as UInt16
        Return SupportLevel >= 3
    End

    Public Function CanEGA() as UInt16
        Return SupportLevel >= 2
    End

    Public Function CanCGA() as UInt16
        Return SupportLevel >= 1
    End

    Public Function CanMGA() as UInt16
        Return SupportLevel >= 0
    End

    Public Function CanTextOnly() as UInt16
        Return SupportLevel == 0
    End


    Public Sub Initialize
        Dim teste as UInt16
        SupportLevel = 0
        teste = 0
        asm "xor bx, bx"
        asm "mov ax, 0x1a00"
        asm "int 0x10"
        asm "mov [bp-2], bx"
        If (teste == 7) OrElse (teste == 8) Then 
            SupportLevel = 3
            Return
        End

        asm "mov ax, 0x1200"
        asm "mov bl, 0x10"
        asm "int 0x10"
        asm "mov [bp-2], bx"
        If teste <> 0x10 Then
            SupportLevel = 2
            Return
        End

        asm "mov ax, 0xf00"
        asm "int 0x10"
        asm "xor ah, ah"
        asm "mov [bp-2], ax"

        If teste == 3 Then
            SupportLevel = 1
        Else
            SupportLevel = 0
        End
    End

    Public Sub Mode80x25x4
        IO.SetVideoMode 3
    End

    Public Function ReadChar() as UInt8
        return IO.ConsoleReadChar()
    End

    Public Sub ReadLine(txt as PtrByteArray)
        Dim len as UInt16
        Dim c as UInt16
        Dim pos as UInt16
        len = txt
        @txt++
        c = 0
        pos = 1
        While 1
            c = IO.ConsoleReadChar()
            If c == 13 Then Goto done
            If c == 10 Then Goto done
            If c == 9 Then
                If pos > 1 Then
                    pos--
                    @txt--
                    txt = 0
                    Console.WriteChar 9
                    Console.WriteChar 32
                    Console.WriteChar 9
                End
            Else
                If pos < len Then
                    Console.WriteChar c
                    txt = c
                    pos++
                    @txt++
                End
            End
        End
        done:
        txt = 0
    End

    Public Sub WriteChar(c as UInt8)
        IO.ConsoleWriteChar c
        If c == 10 Then IO.ConsoleWriteChar 13
    End

    Public Sub Write(txt as PtrByteArray)
        Dim len as UInt16
        Dim i as UInt16
        len = txt
        @txt ++
        i = 1
        While (txt > 0) AndAlso (i <= len)
            WriteChar UTF8.ConvertCharToCP437(txt)
            @txt = @txt + UTF8.CharSize(txt)
            i++
        End
    End

    Public Sub WriteLine(txt as PtrByteArray)
        Write txt
        WriteChar 13
        WriteChar 10
    End

    Public Sub WriteUInt16(nro as UInt16)
        Dim tmp as UInt16
        Dim prox as UInt16
        let tmp = nro mod 10
        let prox = nro / 10
        If prox > 0 Then WriteUInt16 prox
        WriteChar 48 + tmp
    End

    Public Sub WriteInt16(nro as Int16)
        If nro < 0 Then
            let nro = -nro
        End
        WriteUInt16 nro
    End

    Public Sub WriteUInt8(nro as UInt8)
        WriteUInt16 nro
    End

    Public Sub WriteInt8(nro as Int8)
        WriteInt16 nro
    End
End