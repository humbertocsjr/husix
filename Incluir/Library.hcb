error Error = 0
error DivByZeroError = 1
error StackOverflowError = 2
error OutOfMemoryError = 3
error OutOfBoundsError = 4
error NotFoundError = 5
error AlreadyExistsError = 6
error NotImplementedError = 7
error UnknownError = 8
error CapacityOverflowError = 9
error NoAnswerError = 10
error TimeoutError = 11
error InvalidValueError = 12
error AccessDeniedError = 13
error InvalidFormatError = 14
error NotReadyError = 15

Module OS
    Dim TryStack as UInt16
    Dim TryCode as UInt16
    Dim TryBase as UInt16
    Dim TryFatal as UInt16
    Dim MinStackPtr as UInt16

    Sub Start
        ' Inicializa o compilador
        asm "cpu 8086"
        asm "bits 16"
        asm "org 0x100"
        asm "db 'HSX',1 ; Library"
        asm "dw 1 ; HEADER VERSION"
        asm "dw 0 ; MINIMUM API VERSION"
        asm "dw .start ; Start Routine"
        asm "dw END ; Code Size"
        asm "dw 10240 ; Stack Size"
        asm "dw REALOC_TABLE ; Realocation Table"
        asm "dw IMPORT_TABLE ; Import Table"
        asm "dw EXPORT_TABLE ; Export Table"
        asm ".start:"
        asm "mov word [_os_minstackptr], 0"
        asm "mov ax, ss"
        asm "mov ds, ax"
        asm "mov es, ax"
        Start2
        asm "retf"
    End

    Sub StackCheck
        asm "cmp sp, 128"
        asm "ja .ok"
        Throw StackOverflowError
        asm ".ok:"
    End

    Sub Start2
        ' Realoca executavel
        Dim realoc as PtrWordArray
        Dim ptr as PtrWordArray
        Dim tipoRealoc as UInt16
        Dim desvio as UInt16
        Dim soma as UInt16
        #realoc = CodeSegment()
        #ptr = CodeSegment()
        @realoc = RealocTable()
        while realoc <> 0
            tipoRealoc = realoc
            @realoc ++
            @realoc ++
            @ptr = realoc
            @realoc ++
            @realoc ++
            desvio = realoc
            @realoc ++
            @realoc ++
            soma = realoc
            @realoc ++
            @realoc ++
            if tipoRealoc == 3 then
                desvio = desvio + @ptr
                ptr = desvio
                @ptr ++
                @ptr ++
                ptr = CodeSegment() + soma
            end
            if tipoRealoc == 2 then
                @ptr = @ptr + desvio
                ptr = StackSegment() + soma
            end
            if tipoRealoc == 1 then
                @ptr = @ptr + desvio
                ptr = CodeSegment() + soma
            end
        end
        While 1
            asm "int 0x81"
        End
    End

    Public Function CodeSegment() as UInt16
        asm "mov ax, cs"
    End

    Public Function StackSegment() as UInt16
        asm "mov ax, ss"
    End

    Public Function RealocTable() as UInt16
        asm "mov ax, REALOC_TABLE"
    End
End

Structure String
    Dim Capacity as UInt8
End

Module String From "husix"
    Public Function Length(text as PtrByteArray) as UInt16
    Public Function Equals(txt1 as PtrByteArray, txt2 as PtrByteArray) as UInt16
    Public Function Concat(dest as PtrByteArray, orig as PtrByteArray) as UInt16
    Public Function Copy(dest as PtrByteArray, orig as PtrByteArray) as UInt16
end
